#      if (as.Date(res['date']$date, format="%Y-%m-%d") <= as.Date(res['t0']$t0, format="%Y-%m-%d")){
t0[i] <- res$t0
date[i] <- res$date
stype[i] <- res$stype
title[i] <- res$title
val[i] <- res$val
i=i+1
#      }
}
}
df <- data.frame(date=date,
stype=stype,
title=title,
val=val, stringsAsFactors = FALSE)
# new_df ...
new_df <- data.frame()
for (d in unique(df$date)){
temp = df[which(df$date==d),]
for (s in temp$stype){
if (length(temp$title[which(temp$stype==s)])==1){
new_df[d,s] = temp$val[which(temp$stype==s)]
}
else{
new_df[d,s] = temp$val[which(temp$stype==s)][1]
}
}
}
new_df = new_df[order(as.Date(row.names(new_df), format="%Y-%m-%d")),]
# remove missing data
nr <- nrow(new_df)
colSums(is.na(new_df))
delete_var <- colnames(new_df)[colSums(is.na(new_df))>nr/2]
new_df[delete_var] <- NULL
rowSums(is.na(new_df))
rownames(new_df) <- NULL
new_df <- new_df[complete.cases(new_df), ]
rowSums(is.na(new_df))
rownames(new_df) <- NULL
# change formmat to numeric
for (name in colnames(new_df)){
new_df[name]<-  as.numeric(unlist(new_df[name]))
}
# create new variable
if ("BLA" %in% colnames(new_df) & "WBC" %in% colnames(new_df)){
new_df$newvar <- new_df$WBC - new_df$BLA
}
# causal discovery
nr <- nrow(new_df)
u <- c()
for (name in colnames(new_df)){
u <- c(u, dim(unique(new_df[name]))[1])
}
if (min(u)>3){
if (patient != "1568762" & patient != "330706" & patient!="1712131"& patient!="281749"){# & patient != "131005" & patient != "534153"& patient != "1535231"){
dag <- timino_dag(new_df, alpha = 0.05, max_lag = 4, model = traints_gam, indtest = indtestts_hsic, output = FALSE)
dag <- data.frame(dag)
colnames(dag) <- colnames(new_df)
rownames(dag) <- colnames(new_df)
for (i in colnames(dag)){
for (j in rownames(dag)){
if (! is.na(dag[i,j])){
dags[i,j] <-  dags[i,j] + dag[i,j]
}
}
}
print(dag)
print(nr)
k<-k+1
}
} else print("A smoothing variable encountered with 3 or less unique values: at least 4 needed")
print(k)
}
dags
k<-0
# create big dag that will be the sum of patient dag
dags <- data.frame(matrix(0, nrow=16, ncol=16))
colnames(dags) <- c(unique_ty, "newvar")
rownames(dags) <- c(unique_ty, "newvar")
for (patient in unique_ind){
res_ind = c()
n <- 500
t0 <- character(1)
date <- character(1)
stype <- character(1)
title <- character(1)
val <- character(1)
i=1
for (res in result){
if (res['source'] == patient){
#comment if you want all data, decoment if you want data before or at t0
#      if (as.Date(res['date']$date, format="%Y-%m-%d") <= as.Date(res['t0']$t0, format="%Y-%m-%d")){
t0[i] <- res$t0
date[i] <- res$date
stype[i] <- res$stype
title[i] <- res$title
val[i] <- res$val
i=i+1
#      }
}
}
df <- data.frame(date=date,
stype=stype,
title=title,
val=val, stringsAsFactors = FALSE)
# new_df ...
new_df <- data.frame()
for (d in unique(df$date)){
temp = df[which(df$date==d),]
for (s in temp$stype){
if (length(temp$title[which(temp$stype==s)])==1){
new_df[d,s] = temp$val[which(temp$stype==s)]
}
else{
new_df[d,s] = temp$val[which(temp$stype==s)][1]
}
}
}
new_df = new_df[order(as.Date(row.names(new_df), format="%Y-%m-%d")),]
# remove missing data
nr <- nrow(new_df)
colSums(is.na(new_df))
delete_var <- colnames(new_df)[colSums(is.na(new_df))>nr/2]
new_df[delete_var] <- NULL
rowSums(is.na(new_df))
rownames(new_df) <- NULL
new_df <- new_df[complete.cases(new_df), ]
rowSums(is.na(new_df))
rownames(new_df) <- NULL
# change formmat to numeric
for (name in colnames(new_df)){
new_df[name]<-  as.numeric(unlist(new_df[name]))
}
# create new variable
if ("BLA" %in% colnames(new_df) & "WBC" %in% colnames(new_df)){
new_df$newvar <- new_df$WBC - new_df$BLA
}
# causal discovery
nr <- nrow(new_df)
u <- c()
for (name in colnames(new_df)){
u <- c(u, dim(unique(new_df[name]))[1])
}
if (min(u)>3){
if (patient != "1568762"){# & patient != "330706" & patient!="1712131"& patient!="281749" & patient != "131005" & patient != "534153"& patient != "1535231"){
dag <- timino_dag(new_df, alpha = 0.05, max_lag = 4, model = traints_gam, indtest = indtestts_hsic, output = FALSE)
dag <- data.frame(dag)
colnames(dag) <- colnames(new_df)
rownames(dag) <- colnames(new_df)
for (i in colnames(dag)){
for (j in rownames(dag)){
if (! is.na(dag[i,j])){
dags[i,j] <-  dags[i,j] + dag[i,j]
}
}
}
print(dag)
print(nr)
k<-k+1
}
} else print("A smoothing variable encountered with 3 or less unique values: at least 4 needed")
print(k)
}
dags
k<-0
# create big dag that will be the sum of patient dag
dags <- data.frame(matrix(0, nrow=16, ncol=16))
colnames(dags) <- c(unique_ty, "newvar")
rownames(dags) <- c(unique_ty, "newvar")
for (patient in unique_ind){
res_ind = c()
n <- 500
t0 <- character(1)
date <- character(1)
stype <- character(1)
title <- character(1)
val <- character(1)
i=1
for (res in result){
if (res['source'] == patient){
#comment if you want all data, decoment if you want data before or at t0
#      if (as.Date(res['date']$date, format="%Y-%m-%d") <= as.Date(res['t0']$t0, format="%Y-%m-%d")){
t0[i] <- res$t0
date[i] <- res$date
stype[i] <- res$stype
title[i] <- res$title
val[i] <- res$val
i=i+1
#      }
}
}
df <- data.frame(date=date,
stype=stype,
title=title,
val=val, stringsAsFactors = FALSE)
# new_df ...
new_df <- data.frame()
for (d in unique(df$date)){
temp = df[which(df$date==d),]
for (s in temp$stype){
if (length(temp$title[which(temp$stype==s)])==1){
new_df[d,s] = temp$val[which(temp$stype==s)]
}
else{
new_df[d,s] = temp$val[which(temp$stype==s)][1]
}
}
}
new_df = new_df[order(as.Date(row.names(new_df), format="%Y-%m-%d")),]
# remove missing data
nr <- nrow(new_df)
colSums(is.na(new_df))
delete_var <- colnames(new_df)[colSums(is.na(new_df))>nr/2]
new_df[delete_var] <- NULL
rowSums(is.na(new_df))
rownames(new_df) <- NULL
new_df <- new_df[complete.cases(new_df), ]
rowSums(is.na(new_df))
rownames(new_df) <- NULL
# change formmat to numeric
for (name in colnames(new_df)){
new_df[name]<-  as.numeric(unlist(new_df[name]))
}
# create new variable
if ("BLA" %in% colnames(new_df) & "WBC" %in% colnames(new_df)){
new_df$newvar <- new_df$WBC - new_df$BLA
}
# causal discovery
nr <- nrow(new_df)
u <- c()
for (name in colnames(new_df)){
u <- c(u, dim(unique(new_df[name]))[1])
}
if (min(u)>3){
if (patient != "1568762" & patient != "330706" & patient!="1712131"){ #& patient!="281749" & patient != "131005" & patient != "534153"& patient != "1535231"
dag <- timino_dag(new_df, alpha = 0.05, max_lag = 4, model = traints_gam, indtest = indtestts_hsic, output = FALSE)
dag <- data.frame(dag)
colnames(dag) <- colnames(new_df)
rownames(dag) <- colnames(new_df)
for (i in colnames(dag)){
for (j in rownames(dag)){
if (! is.na(dag[i,j])){
dags[i,j] <-  dags[i,j] + dag[i,j]
}
}
}
print(dag)
print(nr)
k<-k+1
}
} else print("A smoothing variable encountered with 3 or less unique values: at least 4 needed")
print(k)
}
dag <- timino_dag(new_df, alpha = 0.05, max_lag = 4, model = traints_gam, indtest = indtestts_hsic, output = FALSE)
new_df
k<-0
# create big dag that will be the sum of patient dag
dags <- data.frame(matrix(0, nrow=16, ncol=16))
colnames(dags) <- c(unique_ty, "newvar")
rownames(dags) <- c(unique_ty, "newvar")
for (patient in unique_ind){
res_ind = c()
n <- 500
t0 <- character(1)
date <- character(1)
stype <- character(1)
title <- character(1)
val <- character(1)
i=1
for (res in result){
if (res['source'] == patient){
#comment if you want all data, decoment if you want data before or at t0
#      if (as.Date(res['date']$date, format="%Y-%m-%d") <= as.Date(res['t0']$t0, format="%Y-%m-%d")){
t0[i] <- res$t0
date[i] <- res$date
stype[i] <- res$stype
title[i] <- res$title
val[i] <- res$val
i=i+1
#      }
}
}
df <- data.frame(date=date,
stype=stype,
title=title,
val=val, stringsAsFactors = FALSE)
# new_df ...
new_df <- data.frame()
for (d in unique(df$date)){
temp = df[which(df$date==d),]
for (s in temp$stype){
if (length(temp$title[which(temp$stype==s)])==1){
new_df[d,s] = temp$val[which(temp$stype==s)]
}
else{
new_df[d,s] = temp$val[which(temp$stype==s)][1]
}
}
}
new_df = new_df[order(as.Date(row.names(new_df), format="%Y-%m-%d")),]
# remove missing data
nr <- nrow(new_df)
colSums(is.na(new_df))
delete_var <- colnames(new_df)[colSums(is.na(new_df))>nr/2]
new_df[delete_var] <- NULL
rowSums(is.na(new_df))
rownames(new_df) <- NULL
new_df <- new_df[complete.cases(new_df), ]
rowSums(is.na(new_df))
rownames(new_df) <- NULL
# change formmat to numeric
for (name in colnames(new_df)){
new_df[name]<-  as.numeric(unlist(new_df[name]))
}
# create new variable
if ("BLA" %in% colnames(new_df) & "WBC" %in% colnames(new_df)){
new_df$newvar <- new_df$WBC - new_df$BLA
}
# causal discovery
nr <- nrow(new_df)
u <- c()
for (name in colnames(new_df)){
u <- c(u, dim(unique(new_df[name]))[1])
}
if (min(u)>3){
if (patient != "1568762" & patient != "330706" & patient!="1712131"& patient!="281749" & patient != "131005" ){#& patient != "534153"& patient != "1535231"
dag <- timino_dag(new_df, alpha = 0.05, max_lag = 4, model = traints_gam, indtest = indtestts_hsic, output = FALSE)
dag <- data.frame(dag)
colnames(dag) <- colnames(new_df)
rownames(dag) <- colnames(new_df)
for (i in colnames(dag)){
for (j in rownames(dag)){
if (! is.na(dag[i,j])){
dags[i,j] <-  dags[i,j] + dag[i,j]
}
}
}
print(dag)
print(nr)
k<-k+1
}
} else print("A smoothing variable encountered with 3 or less unique values: at least 4 needed")
print(k)
}
dag <- timino_dag(new_df, alpha = 0.05, max_lag = 4, model = traints_gam, indtest = indtestts_hsic, output = FALSE)
new_df
dag <- timino_dag(new_df, alpha = 0.05, max_lag = 4, model = traints_gam, indtest = indtestts_hsic, output = FALSE)
k<-0
# create big dag that will be the sum of patient dag
dags <- data.frame(matrix(0, nrow=16, ncol=16))
colnames(dags) <- c(unique_ty, "newvar")
rownames(dags) <- c(unique_ty, "newvar")
for (patient in unique_ind){
res_ind = c()
n <- 500
t0 <- character(1)
date <- character(1)
stype <- character(1)
title <- character(1)
val <- character(1)
i=1
for (res in result){
if (res['source'] == patient){
#comment if you want all data, decoment if you want data before or at t0
#      if (as.Date(res['date']$date, format="%Y-%m-%d") <= as.Date(res['t0']$t0, format="%Y-%m-%d")){
t0[i] <- res$t0
date[i] <- res$date
stype[i] <- res$stype
title[i] <- res$title
val[i] <- res$val
i=i+1
#      }
}
}
df <- data.frame(date=date,
stype=stype,
title=title,
val=val, stringsAsFactors = FALSE)
# new_df ...
new_df <- data.frame()
for (d in unique(df$date)){
temp = df[which(df$date==d),]
for (s in temp$stype){
if (length(temp$title[which(temp$stype==s)])==1){
new_df[d,s] = temp$val[which(temp$stype==s)]
}
else{
new_df[d,s] = temp$val[which(temp$stype==s)][1]
}
}
}
new_df = new_df[order(as.Date(row.names(new_df), format="%Y-%m-%d")),]
# remove missing data
nr <- nrow(new_df)
colSums(is.na(new_df))
delete_var <- colnames(new_df)[colSums(is.na(new_df))>nr/2]
new_df[delete_var] <- NULL
rowSums(is.na(new_df))
rownames(new_df) <- NULL
new_df <- new_df[complete.cases(new_df), ]
rowSums(is.na(new_df))
rownames(new_df) <- NULL
# change formmat to numeric
for (name in colnames(new_df)){
new_df[name]<-  as.numeric(unlist(new_df[name]))
}
# create new variable
if ("BLA" %in% colnames(new_df) & "WBC" %in% colnames(new_df)){
new_df$newvar <- new_df$WBC - new_df$BLA
}
# causal discovery
nr <- nrow(new_df)
u <- c()
for (name in colnames(new_df)){
u <- c(u, dim(unique(new_df[name]))[1])
}
if (min(u)>3){
if (patient != "1568762" & patient != "330706" & patient!="1712131"& patient!="281749" & patient != "131005" & patient != "534153"& patient != "1535231"){
dag <- timino_dag(new_df, alpha = 0.05, max_lag = 4, model = traints_gam, indtest = indtestts_hsic, output = FALSE)
dag <- data.frame(dag)
colnames(dag) <- colnames(new_df)
rownames(dag) <- colnames(new_df)
for (i in colnames(dag)){
for (j in rownames(dag)){
if (! is.na(dag[i,j])){
dags[i,j] <-  dags[i,j] + dag[i,j]
}
}
}
print(dag)
print(nr)
k<-k+1
}
} else print("A smoothing variable encountered with 3 or less unique values: at least 4 needed")
print(k)
}
print(dags)
print(k,"patients")
print(k+"patients")
print(k"patients")
print(k "patients")
print(k ;"patients")
t0 <- character(1)
date <- character(1)
stype <- character(1)
title <- character(1)
val <- character(1)
source <- character(1)
k <- 1
for (res in result){
source[k] <- res$source
t0[k] <- res$t0
date[k] <- res$date
stype[k] <- res$stype
title[k] <- res$title
val[k] <- res$val
k=k+1
}
df <- data.frame(source=source,
t0=t0,
date=date,
stype=stype,
title=title,
val=val, stringsAsFactors = FALSE)
df <- df[order(df$source, as.Date(df$date, format="%Y-%m-%d")),]
df <- df[which(df$t0==df$date),]
new_df <- data.frame()
for (d in unique(df$source)){
temp = df[which(df$source==d),]
for (t in temp$date){
temp2 <- temp[which(temp$date==t),]
for (s in temp2$stype){
if (length(temp2$title[which(temp2$stype==s)])==1){
new_df[paste(d, t, sep="_"),s] = temp2$val[which(temp2$stype==s)]
}
else{
new_df[paste(d, t, sep="_"),s] = temp2$val[which(temp2$stype==s)][1]
}
}
}
}
new_df$BLA[which(is.na(new_df$BLA))] = new_df$BLAST[which(is.na(new_df$BLA))]
nr <- nrow(new_df)
colSums(is.na(new_df))
delete_var <- colnames(new_df)[colSums(is.na(new_df))>nr/2]
new_df[delete_var] <- NULL
rowSums(is.na(new_df))
rownames(new_df) <- NULL
new_df <- new_df[complete.cases(new_df), ]
rowSums(is.na(new_df))
rownames(new_df) <- NULL
for (name in colnames(new_df)){
new_df[name]<-  as.numeric(unlist(new_df[name]))
}
# add new variable
if ("BLA" %in% colnames(new_df) & "WBC" %in% colnames(new_df)){
new_df$newvar <- new_df$WBC - new_df$BLA
}
library(bnlearn)
res = pc.stable(new_df,alpha=0.05)
graphviz.plot(res)
res2 = hc(new_df)
graphviz.plot(res2)
res3 = gs(new_df, alpha = 0.1)
graphviz.plot(res3)
res2 = hc(new_df)
graphviz.plot(res2)
res1 = gs(new_df, alpha = 0.1)
graphviz.plot(res1)
res2 = pc.stable(new_df,alpha=0.05)
graphviz.plot(res2)
res3 = hc(new_df)
graphviz.plot(res3)
